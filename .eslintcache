[{"C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\index.js":"1","C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\components\\App.js":"2","C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\components\\Header.js":"3","C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\components\\ShoppingCart.js":"4","C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\reducers\\index.js":"5","C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\components\\MainPage.js":"6","C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\components\\Products.js":"7","C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\components\\filters\\FilterSelections.js":"8","C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\components\\filters\\CompanyFilter.js":"9","C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\components\\filters\\PriceFilter.js":"10","C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\reducers\\phoneReducer.js":"11","C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\actions\\index.js":"12","C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\apis\\phones.js":"13","C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\reducers\\brandsReducer.js":"14","C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\reducers\\filterReducer.js":"15","C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\reducers\\cartReducers.js":"16","C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\components\\SingleProduct.js":"17","C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\history.js":"18","C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\components\\slider\\Slideshow.js":"19","C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\components\\CartCount.js":"20","C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\reducers\\authReducer.js":"21","C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\components\\GoogleAuth.js":"22","C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\components\\PlaceOrder.js":"23","C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\components\\Modal.js":"24","C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\reducers\\orderReducer.js":"25","C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\components\\Orders.js":"26","C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\components\\SignIn.js":"27","C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\components\\Footer.js":"28"},{"size":568,"mtime":1613478870732,"results":"29","hashOfConfig":"30"},{"size":1251,"mtime":1613546784270,"results":"31","hashOfConfig":"30"},{"size":866,"mtime":1613495260487,"results":"32","hashOfConfig":"30"},{"size":3644,"mtime":1613480276355,"results":"33","hashOfConfig":"30"},{"size":489,"mtime":1613478943705,"results":"34","hashOfConfig":"30"},{"size":323,"mtime":1609512285252,"results":"35","hashOfConfig":"30"},{"size":2349,"mtime":1613480271659,"results":"36","hashOfConfig":"30"},{"size":302,"mtime":1609511995652,"results":"37","hashOfConfig":"30"},{"size":1711,"mtime":1613480294380,"results":"38","hashOfConfig":"30"},{"size":1364,"mtime":1613480303754,"results":"39","hashOfConfig":"30"},{"size":280,"mtime":1613486840887,"results":"40","hashOfConfig":"30"},{"size":4642,"mtime":1613394165789,"results":"41","hashOfConfig":"30"},{"size":205,"mtime":1613475061832,"results":"42","hashOfConfig":"30"},{"size":180,"mtime":1613484868518,"results":"43","hashOfConfig":"30"},{"size":1814,"mtime":1613486834098,"results":"44","hashOfConfig":"30"},{"size":983,"mtime":1613486830454,"results":"45","hashOfConfig":"30"},{"size":2758,"mtime":1613480282416,"results":"46","hashOfConfig":"30"},{"size":88,"mtime":1609921792494,"results":"47","hashOfConfig":"30"},{"size":868,"mtime":1610010710369,"results":"48","hashOfConfig":"30"},{"size":1046,"mtime":1613546132426,"results":"49","hashOfConfig":"30"},{"size":394,"mtime":1613486826604,"results":"50","hashOfConfig":"30"},{"size":2088,"mtime":1613494991751,"results":"51","hashOfConfig":"30"},{"size":2090,"mtime":1613480267269,"results":"52","hashOfConfig":"30"},{"size":698,"mtime":1613206589650,"results":"53","hashOfConfig":"30"},{"size":342,"mtime":1613486836744,"results":"54","hashOfConfig":"30"},{"size":2097,"mtime":1613480259555,"results":"55","hashOfConfig":"30"},{"size":832,"mtime":1613228183528,"results":"56","hashOfConfig":"30"},{"size":182,"mtime":1613547933708,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"11wkp88",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"60"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"60"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\index.js",[],["128","129"],"C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\components\\App.js",[],"C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\components\\Header.js",[],"C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\components\\ShoppingCart.js",["130"],"import React, {useEffect, useState} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport {fetchItemsInCart, removeItemFromCart, increaceItemCount, decreaseItemCount} from '../actions'\r\n\r\n\r\nconst ShoppingCart = (props) => {\r\n    const [change, setChange] = useState(true)\r\n\r\n    useEffect(() => {\r\n        props.fetchItemsInCart()\r\n    },[change])\r\n\r\n    const increace = (phone) => {\r\n        props.increaceItemCount(phone, props.cart)\r\n        setChange(!change)\r\n    }\r\n\r\n    const decrease = (phone) => {\r\n        props.decreaseItemCount(phone, props.cart)\r\n        setChange(!change)\r\n    }\r\n\r\n    const renderCartItems = () => {\r\n        if(!props.cart.length) return <p>...Loading</p>\r\n        return props.cart.map(phone => {  \r\n            if(phone.userId === props.userId) {\r\n                const roundPrice = Math.round(phone.price)\r\n                const itemPriceSum = roundPrice * phone.count\r\n                return (\r\n                    <div className='cartItem-container' key={phone.id}>\r\n                        <img className='cartItem-imge' alt={phone.title} src={phone.images[0]} />\r\n                        <h3 className='cartItem-title'>{phone.title}</h3>\r\n                        <div className='cartItem-count-container'>\r\n                            <button onClick={() => increace(phone)}  className='cartItem-btn'>+</button>\r\n                            <p>{phone.count}</p>\r\n                            <button onClick={() => decrease(phone)} className='cartItem-btn'>-</button>\r\n                        </div>\r\n                        <p className='cartItem-price'>{itemPriceSum}$</p>\r\n                        <button onClick={() => props.removeItemFromCart(phone.id)} className='cartItem-btn'>X</button>\r\n                    </div>\r\n                )\r\n            }\r\n            return <div key={phone.id}></div> \r\n        })\r\n    }\r\n\r\n    //Calculates total amount\r\n    const totalAmount = () => {\r\n        if(!props.cart.length) return\r\n        const currentUserCartItems = props.cart.filter(item => item.userId === props.userId)\r\n        const findPrices = currentUserCartItems.map(obj => {\r\n            return obj.count * obj.price\r\n        })\r\n        const calcTotal = findPrices.reduce((a, b) => a + b, 0)\r\n        const roundPrice = Math.round(calcTotal)\r\n        return roundPrice\r\n    }\r\n\r\n    const renderContent = () => {\r\n        if(props.cart.length === 0) return <h5 className='noOrders'>You cart is empty</h5>\r\n        if(props.cart.length) {\r\n            const currentUserCartItems = props.cart.filter(item => item.userId === props.userId) \r\n            if(currentUserCartItems.length) {\r\n                return(\r\n                    <div className='shoppingCart-container'>Cart\r\n                        {renderCartItems()}\r\n                        <div className='total-container'>\r\n                            <Link to={{pathname: `/cart/order`, state:{total: totalAmount()}}} className='placeOrder-button'>Place order</Link>\r\n                            <h2>Total: {totalAmount()}$</h2>   \r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            return <h5 className='noOrders'>You cart is empty</h5>\r\n        }\r\n        return <h5 className='noOrders'>You cart is empty</h5>\r\n    }\r\n\r\n    return renderContent()  \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        cart: state.cart, \r\n        userId: state.auth.userId,\r\n        \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {fetchItemsInCart, removeItemFromCart, increaceItemCount, decreaseItemCount}) (ShoppingCart);","C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\reducers\\index.js",[],"C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\components\\MainPage.js",[],"C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\components\\Products.js",["131"],"import React, {useEffect} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport {fetchPhones, addItemToCart, noFilters} from '../actions'\r\nimport history from '../history';\r\n\r\n\r\n\r\nconst Products = (props) => {\r\n    useEffect( () => {\r\n        props.fetchPhones();\r\n        props.noFilters() \r\n    },[])\r\n\r\n    //Adds item to cart\r\n    const addToCart = (phone) => {\r\n        if(!props.isSignedIn) {\r\n            history.push('/signin')    \r\n        }\r\n        if(props.isSignedIn) {\r\n            //const nr = '113522037285322671555-101'\r\n            props.addItemToCart(phone, props.cart, props.userId)\r\n        }  \r\n    }\r\n\r\n    //Singel phone look\r\n    const content = (phone) => {\r\n        const roundPrice = Math.round(phone.price) \r\n        return (\r\n            <div className='product-container' key={phone.id}>\r\n                <img className='products-img' src={phone.images[0]} alt={phone.title} />\r\n                <h3 className='products-title'>{phone.title}</h3>\r\n                <p className='products-brand'>{phone.brand}</p>\r\n                <p className='products-price'>{`${roundPrice} USD`}</p>\r\n                <div className='products-action-container'>\r\n                    <Link to={`/phones/${phone.id}`} className='products-btn '>See Specs</Link>\r\n                    <button onClick={() => addToCart(phone)} className='products-btn'>Add to cart</button>\r\n                </div> \r\n            </div>\r\n        )\r\n    }\r\n\r\n    //If there is data, renders phones\r\n    const renderProducts = () => {\r\n        if(props.allPhones.length === 0) {\r\n            return <p>...Loading</p>\r\n        }\r\n        return props.filteredPhones.map((phone) => {\r\n            return content(phone);\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div className='products-container'>\r\n            {renderProducts()}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n     //console.log(state.cart)\r\n    return {\r\n        brandFilter: state.filter.brandFilter,\r\n        allPhones: state.filter.allPhones,\r\n        filteredPhones: state.filter.filteredPhones,\r\n        cart: state.cart,\r\n        userId: state.auth.userId,\r\n        isSignedIn: state.auth.isSignedIn\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {fetchPhones, addItemToCart, noFilters}) (Products);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\components\\filters\\FilterSelections.js",[],"C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\components\\filters\\CompanyFilter.js",["132"],"import React, {useEffect} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {fetchBrands, filterBrandsAdd, filterBrandsRemove} from '../../actions/index'\r\n\r\n\r\n\r\nconst ComapnyFilter = (props) => {\r\n    useEffect( () => {\r\n        props.fetchBrands();\r\n    },[])\r\n\r\n    const addBrandFilters = (event) => {\r\n        if(event.target.checked) {\r\n            const addBrand = props.phones.filter(item => item.brand === event.target.value);\r\n            props.filterBrandsAdd(addBrand)\r\n        } else if (!event.target.checked) {\r\n            props.filterBrandsRemove(event.target.value)\r\n        } \r\n    }\r\n\r\n    const renderComapanys = () => {\r\n        if(props.brands.length === 0) return <p>...Loading</p>\r\n        return props.brands.map((brand) => {\r\n            return (\r\n                <div key={brand} className=\"form-check\">\r\n                    <input onClick={((event) => {addBrandFilters(event)})} value={brand} className=\"form-check-input\" type=\"checkbox\" itemID=\"flexCheckIndeterminate\" />\r\n                    <label className=\"form-check-label\" htmlFor=\"flexCheckIndeterminate\">\r\n                        {brand}\r\n                    </label>\r\n                </div>\r\n            )     \r\n        })\r\n    } \r\n\r\n    return(\r\n        <div className='brand-container'>\r\n            <h5>ComapnyFilter</h5>\r\n            <div className='brand-container-wrap'>{renderComapanys()}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        brands: state.brands,\r\n        phones: state.phones, \r\n        filter: state.filter.brandFilter\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {fetchBrands, filterBrandsAdd, filterBrandsRemove }) (ComapnyFilter);","C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\components\\filters\\PriceFilter.js",["133"],"import React, {useEffect, useState} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {priceFilter} from '../../actions/index'\r\n\r\n\r\nconst PriceFilter = (props) => {\r\n    const [price, setPrice] = useState('1000')\r\n    const [debouncedTerm, setDebouncedTerm] = useState('1000');\r\n\r\n    //Time dalay for price filter\r\n    useEffect(() => {\r\n        const timerId = setTimeout(() =>{\r\n            setDebouncedTerm(price);\r\n        }, 1000)\r\n        return () => {\r\n            clearTimeout(timerId);\r\n        }\r\n    }, [price])\r\n\r\n    //Calls price action if terms changes\r\n    useEffect( () => {\r\n        props.priceFilter(debouncedTerm)   \r\n    },[debouncedTerm, props.brandFilter ])\r\n\r\n    return(\r\n        <div className='brand-container'>\r\n            <h5>Price Range</h5>\r\n            <div className='brand-container-wrap'>\r\n                <div className=\"range-wrap\">\r\n                    <input min=\"0\" max=\"1000\" type=\"range\" className=\"range\" onChange={((event) => setPrice(event.target.value))} value={price} />\r\n                    <output className=\"bubble\">Price: {price}</output>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )  \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {  \r\n        brandFilter: state.filter.brandFilter\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {priceFilter}) (PriceFilter);","C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\reducers\\phoneReducer.js",["134"],"export default (state={}, action) => {\r\n    switch(action.type) {\r\n        case \"FETCH_PHONES\":\r\n            return (action.payload);\r\n        case \"FETCH_PHONE\":\r\n            return { ...state, [action.payload.id]: action.payload };\r\n    default:\r\n        return state;\r\n    }\r\n}","C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\actions\\index.js",[],"C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\apis\\phones.js",[],"C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\reducers\\brandsReducer.js",["135"],"export default (state=[], action) => {\r\n    switch(action.type) {\r\n        case \"FETCH_BRANDS\":\r\n            return (action.payload);\r\n    default:\r\n        return state;\r\n    }\r\n}","C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\reducers\\filterReducer.js",["136"],"const initialState = {\r\n    brandFilter: [],\r\n    priceFilter: [],\r\n    allPhones: [],\r\n    filteredPhones: []\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'NO_FILTERS':\r\n            if(state.allPhones.length === 0) {\r\n                return {...state, \r\n                    allPhones: [...state.allPhones, ...action.payload],\r\n                    filteredPhones: [...state.filteredPhones, ...action.payload]};\r\n            }\r\n            return state   \r\n        case 'ADD_BRAND_FROM_FILTERS': \r\n            return {...state,\r\n                    brandFilter: [...state.brandFilter, ...action.payload],\r\n                    filteredPhones: action.payload};\r\n        case 'REMOVE_BRAND_FROM_FILTER':\r\n            const removeBrand = state.brandFilter.filter(item => item.brand !== action.payload);\r\n            return {...state,\r\n                    brandFilter: removeBrand,\r\n                    filteredPhones: removeBrand};\r\n        case 'PRICE_FILTER': \r\n            const priceFilterBrand = state.brandFilter.filter(item => item.price < action.payload)\r\n            const priceFilterBrand2 = state.brandFilter.filter(element => priceFilterBrand.includes(element));\r\n            const priceFilterAll = state.allPhones.filter(item => item.price < action.payload)     \r\n            //Filters allPhones by price\r\n            if(state.brandFilter.length === 0) {\r\n                return {...state,\r\n                    priceFilter: priceFilterAll,\r\n                    filteredPhones: priceFilterAll};\r\n            }\r\n            //Filters brandFilter by price\r\n            return {...state,\r\n                    priceFilter: priceFilterBrand2,\r\n                    filteredPhones: priceFilterBrand2}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\reducers\\cartReducers.js",["137"],"import _ from 'lodash';\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_ITEM_TO_CART':\r\n            return { ...state, [action.payload.id]: action.payload };\r\n        case 'INCREASE_ITEM_IN_CART':\r\n            return state.map(product => {\r\n                if (product.id === action.payload.id) {\r\n                    return { ...product, count: product.count};\r\n                }\r\n                return product;\r\n            });\r\n        case 'DECREASE_ITEM_IN_CART':\r\n            return state.map(product => {\r\n                if (product.id === action.payload.id) {\r\n                    return { ...product, count: product.count};\r\n                }\r\n                return product;\r\n            });\r\n        case \"FETCH_ITEM_IN_CART\":\r\n            return (action.payload);\r\n            \r\n        case \"REMOVE_ITEM_FROM_CART\":\r\n            return _.omit(state, action.payload);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\components\\SingleProduct.js",["138"],"import React, {useEffect} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {fetchPhone} from '../actions'\r\nimport Slideshow from './slider/Slideshow'\r\nimport history from '../history'\r\n\r\n\r\nconst SingleProduct = (props) => {\r\n    useEffect(() => {\r\n        props.fetchPhone(props.match.params.id)\r\n    },[])\r\n\r\n\r\n    //Adds item to cart\r\n    const addToCart = (phone) => {\r\n        if(!props.isSignedIn) {\r\n            history.push('/signin')    \r\n        }\r\n        if(props.isSignedIn) {\r\n            props.addItemToCart(phone, props.cart, props.userId)\r\n        }  \r\n    }\r\n    \r\n    \r\n    if(!props.phone) {\r\n        return <p>...Loading</p>\r\n    }\r\n    const { phone } = props\r\n    const roundPrice = Math.round(props.phone.price) \r\n    return(\r\n        <div className='singleProduct-container'>\r\n            <Slideshow images={props.phone.images} />\r\n            <table>\r\n               <tbody>\r\n                    <tr>\r\n                    <td>Brand</td>\r\n                    <td>{phone.brand}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Phone</td>\r\n                    <td>{phone.title}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Cpu</td>\r\n                    <td>{phone.cpu}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Camera</td>\r\n                    <td>{phone.camera}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Battery</td>\r\n                    <td>{phone.battery}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Display</td>\r\n                    <td>{phone.display}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Memory</td>\r\n                    <td>{phone.memory}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Size</td>\r\n                    <td>{phone.size}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Weight</td>\r\n                    <td>{phone.weight}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Description</td>\r\n                    <td>{phone.description}</td>\r\n                </tr>\r\n               </tbody>\r\n            </table>\r\n            <div className='singleProduct-action-container'>\r\n                <p className='products-price'>{`Price: ${roundPrice} USD`}</p>\r\n                <button onClick={() => addToCart(phone)} className='products-btn'>Add to cart</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    //console.log(ownProps);\r\n    return {\r\n        phone: state.phones[ownProps.match.params.id]\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {fetchPhone}) (SingleProduct);","C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\history.js",[],"C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\components\\slider\\Slideshow.js",[],"C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\components\\CartCount.js",["139"],"C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\reducers\\authReducer.js",["140"],"const INITAL_SATE = {\r\n    isSignedIn: null,\r\n    userId: null\r\n}\r\n\r\nexport default ( state = INITAL_SATE, action ) => {\r\n    switch (action.type) {\r\n        case 'SIGN_IN':\r\n            return {...state, isSignedIn: true, userId: action.payload};\r\n        case 'SIGN_OUT':\r\n            return {...state, isSignedIn: false, userId: null};\r\n        default:\r\n            return state;\r\n    }\r\n};","C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\components\\GoogleAuth.js",[],"C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\components\\PlaceOrder.js",["141"],"import React, {useEffect} from 'react';\r\nimport { connect } from 'react-redux'\r\nimport Modal from './Modal';\r\nimport history from '../history';\r\nimport { fetchItemsInCart, confirmOrder } from '../actions';\r\n\r\nconst PlaceOrder = (props) => {\r\n    useEffect(() => props.fetchItemsInCart(),[])\r\n\r\n    const renderCart = () => {\r\n        if(!props.cart.length) return <p>...Loading</p>\r\n        return props.cart.map(phone => {\r\n            if(phone.userId === props.userId) {\r\n                const roundPrice = Math.round(phone.price)\r\n                const itemPriceSum = roundPrice * phone.count\r\n                return (\r\n                    <div className='placeOrder-cartItem-container' key={phone.id}>\r\n                        <h3 style={{margin: '0'}}>{phone.title}</h3>\r\n                        <p>{phone.count}</p> \r\n                        <p>{itemPriceSum}$</p>  \r\n                    </div>\r\n                )\r\n            }\r\n            return <div key={phone.id}></div>\r\n        })\r\n    }\r\n\r\n    const renderConfirm = () => {\r\n        props.confirmOrder(props.cart, props.userId, props.location.state.total )\r\n        history.push('/myorders')  \r\n    }\r\n\r\n    const renderTotal = () => {\r\n        return (\r\n            <div className='content placeOrder-total'>\r\n                <button onClick={renderConfirm} className='confirmOrder-button'>Confirm Order</button>\r\n                <h2>Total: {props.location.state.total}$</h2> \r\n            </div>\r\n        )\r\n    }\r\n\r\n    return(\r\n            <Modal\r\n                title=\"Confirm order\"\r\n                content=\"Please check Your order and confirm it\" \r\n                cart={renderCart()}\r\n                onDismiss={() => history.push('/cart')}\r\n                isSignedIn={props.isSignedIn}\r\n                total={renderTotal()}\r\n            />\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        cart: state.cart, \r\n        isSignedIn: state.auth.isSignedIn,\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {fetchItemsInCart, confirmOrder}) (PlaceOrder);","C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\components\\Modal.js",[],"C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\reducers\\orderReducer.js",["142"],"export default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case \"FETCH_ORDERS\":\r\n            //console.log(action.payload, 'ala')\r\n            return (action.payload);   \r\n        case 'ADD_ORDER':\r\n            return { ...state, [action.payload.id]: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\components\\Orders.js",["143"],"import React, {useEffect} from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { fetchOrders } from '../actions';\r\n\r\nconst Orders = (props) => {\r\n    useEffect(() => props.fetchOrders(),[])\r\n\r\n    const renderItems = (order) => {\r\n        return order.addItems.map(item => {\r\n            const roundPrice = Math.round(item.price)\r\n            const itemPriceSum = roundPrice * item.count\r\n            return(\r\n                <div className='order-item-container' key={item.id}>\r\n                    <h5 style={{margin: '0'}}>{item.title}</h5>\r\n                    <p>{item.count}</p> \r\n                    <p>{itemPriceSum}</p>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    const renderContent = () => {\r\n        if(!props.orders.length) return <p>...Loading</p>\r\n\r\n        const filterUsers = props.orders.filter(order => order.userId === props.userId)\r\n        if(!filterUsers.length) return <h5 className='noOrders'>Currently you dont have any active orders</h5>\r\n        return filterUsers.map(order => {\r\n            return (\r\n                <div className='order-container' key={order.id}>\r\n                    <div className='order'>\r\n                        <div>\r\n                            <h5>Order id</h5>\r\n                            <p>{order.id}</p>\r\n                        </div>\r\n                        <div>\r\n                            <h5>Date</h5>\r\n                            <p>{order.date}</p>\r\n                        </div>\r\n                        <div>\r\n                            <h5>Total</h5>\r\n                            <p>{order.total}</p>\r\n                        </div>\r\n                    </div>\r\n                    {renderItems(order)}\r\n                </div>\r\n            )               \r\n        })\r\n    }\r\n    return <div className='orders-container'>{renderContent()}</div> \r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isSignedIn: state.auth.isSignedIn,\r\n        userId: state.auth.userId,\r\n        orders: state.order\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {fetchOrders}) (Orders);","C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\components\\SignIn.js",[],"C:\\wamp\\www\\React\\mob-sales-store\\mob-sales\\src\\components\\Footer.js",[],{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":12,"column":7,"nodeType":"150","endLine":12,"endColumn":15,"suggestions":"151"},{"ruleId":"148","severity":1,"message":"149","line":13,"column":7,"nodeType":"150","endLine":13,"endColumn":9,"suggestions":"152"},{"ruleId":"148","severity":1,"message":"149","line":10,"column":7,"nodeType":"150","endLine":10,"endColumn":9,"suggestions":"153"},{"ruleId":"148","severity":1,"message":"149","line":23,"column":7,"nodeType":"150","endLine":23,"endColumn":42,"suggestions":"154"},{"ruleId":"155","severity":1,"message":"156","line":1,"column":1,"nodeType":"157","endLine":10,"endColumn":2},{"ruleId":"155","severity":1,"message":"156","line":1,"column":1,"nodeType":"157","endLine":8,"endColumn":2},{"ruleId":"155","severity":1,"message":"156","line":8,"column":1,"nodeType":"157","endLine":43,"endColumn":2},{"ruleId":"155","severity":1,"message":"156","line":3,"column":1,"nodeType":"157","endLine":29,"endColumn":2},{"ruleId":"148","severity":1,"message":"149","line":11,"column":7,"nodeType":"150","endLine":11,"endColumn":9,"suggestions":"158"},{"ruleId":"148","severity":1,"message":"149","line":8,"column":7,"nodeType":"150","endLine":8,"endColumn":26,"suggestions":"159"},{"ruleId":"155","severity":1,"message":"156","line":6,"column":1,"nodeType":"157","endLine":15,"endColumn":3},{"ruleId":"148","severity":1,"message":"149","line":8,"column":46,"nodeType":"150","endLine":8,"endColumn":48,"suggestions":"160"},{"ruleId":"155","severity":1,"message":"156","line":1,"column":1,"nodeType":"157","endLine":11,"endColumn":2},{"ruleId":"148","severity":1,"message":"149","line":6,"column":41,"nodeType":"150","endLine":6,"endColumn":43,"suggestions":"161"},"no-native-reassign",["162"],"no-negated-in-lhs",["163"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["164"],["165"],["166"],["167"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["168"],["169"],["170"],["171"],"no-global-assign","no-unsafe-negation",{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"174","fix":"176"},{"desc":"177","fix":"178"},{"desc":"174","fix":"179"},{"desc":"180","fix":"181"},{"desc":"174","fix":"182"},{"desc":"174","fix":"183"},"Update the dependencies array to be: [change, props]",{"range":"184","text":"185"},"Update the dependencies array to be: [props]",{"range":"186","text":"187"},{"range":"188","text":"187"},"Update the dependencies array to be: [debouncedTerm, props, props.brandFilter]",{"range":"189","text":"190"},{"range":"191","text":"187"},"Update the dependencies array to be: [props, props.cart.length]",{"range":"192","text":"193"},{"range":"194","text":"187"},{"range":"195","text":"187"},[386,394],"[change, props]",[347,349],"[props]",[269,271],[658,693],"[debouncedTerm, props, props.brandFilter]",[316,318],[225,244],"[props, props.cart.length]",[287,289],[194,196]]